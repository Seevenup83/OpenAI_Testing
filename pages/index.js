import Head from "next/head";
import { useState } from "react";
import styles from "./index.module.css";

export default function Home() {
  // Define all the necessary state variables using the useState hook
  const [submittedInput, setSubmittedInput] = useState(""); // stores the input submitted by the user
  const [userInput, setuserInput] = useState(""); // stores the current value of the input field
  const [promptTokens, setPromptTokens] = useState(""); // stores the prompt tokens generated by OpenAI API
  const [result, setResult] = useState(""); // stores the result generated by OpenAI API
  const [completionTokens, setCompletionTokens] = useState(""); // stores the completion tokens generated by OpenAI API

  async function onSubmit(event) {
    // This function will be called when the user submits the form
    event.preventDefault(); // prevent the default form submission behavior

    try {
      // Send a POST request to the API with user input as request body
      const response = await fetch("/api/generate", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ userInput: userInput }),
      });

      // Parse the response JSON data
      const data = await response.json();

      // Check if the response is successful
      if (response.status !== 200) {
        throw data.error || new Error(`Request failed with status ${response.status}`);
      }

      // If the response is successful, update the state variables
      setSubmittedInput(userInput); // update submittedInput state variable
      setuserInput(""); // clear the input field
      setPromptTokens(data.info.prompt_tokens); // update promptTokens state variable
      setResult(data.result); // update result state variable
      setCompletionTokens(data.info.completion_tokens); // update completionTokens state variable
    } catch(error) {
      // If there is an error, log it to the console and show an alert to the user
      console.error(error);
      alert(error.message);
    }
  }
  return (
    <div className={styles.body}>
      <Head>
        <title>OpenAI - Testing</title>
        <link rel="icon" href="/ChatGPT_icon.png" />
      </Head>

      <main className={styles.main}>
        <img src="/ChatGPT_icon.png" className={styles.icon} />
        <h1>Testing by Seevenup</h1>

        {/* Display the result if available */}
        {result && (
          <div className={styles.wrapper}>
            <div className={styles.speechbubble}>
              <p>
                {submittedInput}
                <span className={styles.username}>promptTokens: {promptTokens}</span>
              </p>
            </div>

            <div className={styles.speechbubble}>
              <p>
                {result.replace(/^(\n\n)/, '')}
                <span className={styles.username}>completionTokens: {completionTokens}</span>
              </p>
            </div>
          </div>
        )}

        <form onSubmit={onSubmit}>
          <input
            type="text"
            name="userInput"
            placeholder="Enter your question"
            value={userInput}
            onChange={(e) => setuserInput(e.target.value)}
          />
        </form>
      </main>
    </div>
  );
}
